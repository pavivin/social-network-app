name: Workflow для dev ветки

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install pre-commit
        run: pip install pre-commit
      - name: Test commit
        run: pre-commit run -a

  build:
    runs-on: ubuntu-latest
    needs: [pre-commit]
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: startupcifra
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build the Docker image
        run: docker build . -t startupcifra/voices-backend:$(git rev-parse --short "$GITHUB_SHA")
      - name: Push the Docker image
        run: docker push startupcifra/voices-backend:$(git rev-parse --short "$GITHUB_SHA")

  migrate:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - id: ssh-context
        uses: invi5H/ssh-action@v1
        with:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: startupcifra
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Load env
        run: echo "${{ secrets.ENV_CONTENTS}}" > .env
      - name: Migrate db
        run: DOCKER_HOST=ssh://${{ steps.ssh-context.outputs.SERVER }} docker run --env-file .env --network voices-dev startupcifra/voices-backend:$(git rev-parse --short "$GITHUB_SHA") alembic upgrade head

  deploy:
    runs-on: ubuntu-latest
    needs: [ migrate ]
    steps:
      - uses: actions/checkout@v3
      - id: ssh-context
        uses: invi5H/ssh-action@v1
        with:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: startupcifra
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Prepare env
        run: echo "${{ secrets.ENV_CONTENTS}}" > .env
      - name: Update docker tag
        run: echo "IMAGE_TAG=$(git rev-parse --short "$GITHUB_SHA")" >> .env
      - name: Kill previous deployment
        run: DOCKER_HOST=ssh://${{ steps.ssh-context.outputs.SERVER }} docker compose -p voices-dev stop web
      - name: Recreate deployment
        run: DOCKER_HOST=ssh://${{ steps.ssh-context.outputs.SERVER }} docker compose -p voices-dev up -d web
